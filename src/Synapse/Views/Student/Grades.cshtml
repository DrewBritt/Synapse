@model Synapse.Data.ViewModels.StudentGradesVM

@{
    ViewData["Title"] = "Grades";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/js/studentGrades.js"></script>

<div class="container has-text-centered" style="width: 65%; margin-left: auto; margin-right: auto;">
    <div>
        <h1 class="title">Schedule & Grades</h1>
        <hr />
        <div style="padding-bottom: .5rem; border-bottom: 1.5px solid #dbdbdb">
            <div class="columns">
                <div class="column"><h1 class="is-size-6 has-text-weight-bold has-text-left" style="margin-left: 1rem;">Class Name</h1></div>
                <div class="column"><h1 class="is-size-6 has-text-weight-bold has-text-left">Teacher Name</h1></div>
                <div class="column"><h1 class="is-size-6 has-text-weight-bold has-text-left">Period</h1></div>
                <div class="column"><h1 class="is-size-6 has-text-weight-bold has-text-left">Grade In Class</h1></div>
                <div class="column"><h1 class="is-size-6 has-text-weight-bold has-text-left">Open Grades</h1></div>
            </div>
        </div>

        @for(int classIndex = 0; classIndex < Model.StudentSchedule.Count; classIndex++)
        {
        <div style="border-bottom: 1px solid #dbdbdb; margin-top: .5rem">
            <div class="columns" style="margin-bottom: 0;">
                <div class="column"><p class="has-text-left" style="margin-left: 1rem;">@Html.DisplayFor(modelItem => Model.StudentSchedule[classIndex].ClassName)</p></div>
                <div class="column"><p class="has-text-left">@Html.DisplayFor(modelItem => Model.StudentSchedule[classIndex].TeacherFullName)</p></div>
                <div class="column"><p class="has-text-left">@Html.DisplayFor(modelItem => Model.StudentSchedule[classIndex].Period)</p></div>
                @if (Model.ClassAverages[classIndex] == null)
                {
                    <div class="column"><p class="has-text-left">N/A</p></div>
                }
                else
                {
                    <div class="column"><p class="has-text-left">@Html.DisplayFor(modelItem => Model.ClassAverages[classIndex])%</p></div>
                }
                <div class="column" onclick="openGrades('@Html.DisplayFor(modelItem => Model.StudentSchedule[classIndex].ClassId)', '@Html.DisplayFor(modelItem => Model.StudentSchedule[classIndex].ClassId)dropdown')"><p id="@Html.DisplayFor(modelItem => Model.StudentSchedule[classIndex].ClassId)dropdown" class="is-primary fas fa-chevron-down is-pulled-left is-vcentered" style="margin-top: .3rem; color: hsl(217, 71%, 53%);"></p></div>
            </div>
            <div id="@Html.DisplayFor(modelItem => Model.StudentSchedule[classIndex].ClassId)gradesTable" data-url="@Url.Action("_AssignmentsTable", "Student", new { Model.StudentId, Model.StudentSchedule[classIndex].ClassId })">
                <div id="@Html.DisplayFor(modelItem => Model.StudentSchedule[classIndex].ClassId)container"></div>
            </div>
        </div>
        }
    </div>
</div>