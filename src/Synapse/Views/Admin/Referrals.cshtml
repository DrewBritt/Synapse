@model List<Synapse.Data.ViewModels.ReferralVM>

@{
    ViewData["Title"] = "Referrals";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container has-text-centered">
    <h1 class="title">View Open Referrals</h1>
    <div class="is-centered">
        @if (Model.FindAll(r => r.Handled.Equals(false)).Count == 0)
        {

            <table class="table" style="width: 65%; margin-left: auto; margin-right: auto">
                <thead>
                    <tr>
                        <th>Student Name</th>
                        <th>Teacher Name</th>
                        <th>Date</th>
                        <th>ID</th>
                        <th>Description</th>
                        <th>Action</th>
                    </tr>
                </thead>

            </table>
            <p>There are no open referrals.</p>
        }
        else
        {
            <table class="table" style="width: 65%; margin-left: auto; margin-right: auto">
                <thead>
                    <tr>
                        <th>Student Name</th>
                        <th>Teacher Name</th>
                        <th>Date</th>
                        <th>ID</th>
                        <th>Description</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        //If the referral is marked as handled, skip it (goes in its own table)
                        @if (!item.Handled)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StudentFullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TeacherFullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateIssuedString)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReferralId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DescriptionTruncated)
                                </td>
                                <td>
                                    <a class="button is-primary is-small" asp-area="" asp-controller="Admin" asp-action="ViewReferral" asp-route-referralid=@item.ReferralId>
                                        View
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }
    </div>
    <hr />
    <h1 class="title">
        View Closed Referrals
    </h1>

    <div class="is-centered">
        @if (Model.FindAll(r => r.Handled.Equals(true)).Count == 0)
        {
            <p>There are no closed referrals!</p>
        }
        else
        {
        <table class="table" style="width: 65%; margin-left: auto; margin-right: auto">
            <thead>
                <tr>
                    <th>Student Name</th>
                    <th>Teacher Name</th>
                    <th>Date</th>
                    <th>ID</th>
                    <th>Description</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    @if (item.Handled)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.StudentFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TeacherFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateIssuedString)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReferralId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DescriptionTruncated)
                        </td>
                        <td>
                            <a class="button is-primary is-small" asp-area="" asp-controller="Admin" asp-action="ViewReferral" asp-route-referralid=@item.ReferralId>
                                    View
                            </a>
                        </td>
                    </tr>
                    }
                }
            </tbody>
        </table>
        }
    </div>
</div>