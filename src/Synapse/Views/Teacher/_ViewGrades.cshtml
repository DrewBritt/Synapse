@model Synapse.Data.ViewModels.GradesVM

<div id="view" hidden>
    <div class="container has-text-centered" style="margin-bottom: 2rem; width: 100%;">
        <h1 class="title">Viewing grades for <span class="has-text-weight-bold">@Model.ClassName</span></h1>
        <hr />

        @if (Model.EnrolledStudents.Count == 0)
        {
            <p>No students are enrolled in this class!</p>
        }
        else if (Model.ClassAssignments.Count == 0)
        {
            <p>No Assignments exist for this class!</p>
        }
        else
        {
            <div class="" style="margin-bottom: 2rem;">
                <div class="table-container">
                    <table id="grades" class="table is-fullwidth is-narrow gradesTable">
                        <thead>
                            <tr>
                                <th width="10%">Student Name</th>
                                <th>Average</th>
                                @foreach (var assignment in Model.ClassAssignments)
                                {
                                    <th id="@assignment.AssignmentName">
                                        @assignment.AssignmentName - @Model.AssignmentCategories.Find(a => a.CategoryId == assignment.CategoryId).CategoryWeight%
                                        <gradeWeight hidden id="@Model.AssignmentCategories.Find(a => a.CategoryId == assignment.CategoryId).CategoryWeight"/>
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @for (int studentIndex = 0; studentIndex < Model.EnrolledStudents.Count; studentIndex++)
                            {
                                <tr>
                                    <td>@Model.EnrolledStudents[studentIndex].StudentFullName</td>
                                    <td>@Model.StudentAverages[studentIndex]%</td>
                                    @for (int assignmentIndex = 0; assignmentIndex < Model.ClassAssignments.Count; assignmentIndex++)
                                    {
                                        <td>
                                            <input maxlength="3" value="@Model.StudentGrades[assignmentIndex + (studentIndex * Model.ClassAssignments.Count)].GradeValue" name="@Model.StudentGrades[assignmentIndex + (studentIndex * Model.ClassAssignments.Count)].GradeId" class="input" style="width: 5rem" max="100" />
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="columns">
                    <div class="column is-one-fifth">
                        <div id="saving"></div>
                    </div>
                </div>
                <div class="columns">
                    <div class="column is-one-fifth">
                        <progress id="savingbar" class="progress is-small is-info is-hidden" style="width: 7rem;" max="100"></progress>
                    </div>
                </div>
            </div>
        }
    </div>
</div>